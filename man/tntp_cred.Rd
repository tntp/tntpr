% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tntp_cred.R
\name{tntp_cred}
\alias{tntp_cred}
\alias{tntp_cred_list}
\title{TNTP Credential Get/Set Command}
\usage{
tntp_cred(service, username = NULL, keyring = NULL, .set = FALSE)

tntp_cred_list(service = NULL, keyring = NULL)
}
\arguments{
\item{service}{The identifier for the credential you are pulling or setting}

\item{username}{OPTIONAL. Can be used to specify different usernames for the same service}

\item{keyring}{OPTIONAL. Can be used to specify a specific keyring}

\item{.set}{Logical. If \code{TRUE}, will prompt the user to set a credential and will not return a value. Essentially the same as \code{keyring::key_set()}.}
}
\value{
A stored (or newly created) credential
}
\description{
A wrapper around the \code{keyring} package for secure credential management.

\code{tntp_cred()} will attempt to get a key, and if no credential is found it
will prompt you to add it (and then return it). You can also use this to
just set (or overwrite) values by using the \code{.set} parameter.

\code{tntp_cred_list()} will list all current credentials by service and username
}
\examples{
\dontrun{
# Using tntp_cred() with qualtRics
library(qualtRics)

# If no credential is set, this command will prompt for it first
qualtrics_token <- tntp_cred("QUALTRICS_TOKEN")
qualtrics_api_credentials(api_key = qualtrics_token,
                          base_url = 'tntp.co1.qualtrics.com')

# To overwrite your Qualtrics credential
tntp_cred("QUALTRICS_TOKEN", .set = TRUE)
}

}
