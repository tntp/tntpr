% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_unique_by.R
\name{is_unique_by}
\alias{is_unique_by}
\title{Check a data frame for uniquely identifying columns}
\usage{
is_unique_by(data, ..., .print = TRUE)
}
\arguments{
\item{data}{The input data frame}

\item{...}{Columns to check for uniqueness. Takes a tidyselect specification. If no selections are specified, checks for uniqueness by all columns}

\item{.print}{Should duplicates be printed if they exist? Defaults to TRUE}
}
\value{
returns a logical value. If the data frame is NOT uniquely
identified by the given columns, prints the duplicates to the console
as well.
}
\description{
This function extends \code{janitor::get_dupes()} into an assertion. If duplicate
values exist for the specified columns of the data frame it returns false
and prints the duplicates (printing can be disabled with the \code{.print}
parameter)

This function is pipe-friendly and designed to be used with \code{stopifnot()} or
\code{assertthat::assert_that()}
}
\examples{

library(assertthat)

# Testing for unique key values (TRUE)
stopifnot(
  fake_county |> is_unique_by(tid, school_year)
)

# Testing for unique key values (FALSE)
try(
  assert_that(
    wisc |> is_unique_by(district, school, grade)
  )
)

}
